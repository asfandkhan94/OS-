#!/bin/bash
# Modified from http://linuxcommand.org/lc3_adv_dialog.php
# while-menu-dialog: a menu driven system information program
# Adjust tcdialog to dialog or similar in Fedora

DIALOG_CANCEL=1
DIALOG_ESC=255
HEIGHT=0
WIDTH=0

display_result() {
  dialog --title "$1" \
    --no-collapse \
    --msgbox "$result" 0 0
}

while true; do
  exec 3>&1
  selection=$(dialog \
    --backtitle "System Information" \
    --title "Menu" \
    --clear \
    --cancel-label "Exit" \
    --menu "Please select:" $HEIGHT $WIDTH 10 \
    "1" "Print Working Directory" \
    "2" "Return to Parent" \
    "3" "Return to Home" \
    "4" "Choose Directory..." \
    "5" "Traverse current Directory" \
"6" "sum of all files" \
    2>&1 1>&3)
  exit_status=$?
  exec 3>&-
  case $exit_status in
    $DIALOG_CANCEL)
      clear
      echo "Program terminated."
      exit
      ;;
    $DIALOG_ESC)
      clear
      echo "Program aborted." >&2
      exit 1
      ;;
  esac
  case $selection in
    0 )
      clear
      echo "Program terminated."
      ;;
    1 )
      result=$PWD
      display_result "Working Directory"
      ;;
    2 )
      cd ..
      ;;
    3 )
      cd
      ;;
    4 )
      DIALOG=${DIALOG=dialog}

FILE=`$DIALOG --stdout --title "Please choose a file" --fselect $PWD/ 14 48`

case $? in
	0)
		echo "\"$FILE\" chosen"
      		cd $FILE;;
	1)
		echo "Cancel pressed.";;
	255)
		echo "Box closed.";;
esac
      ;;
    5 )
	~/Desktop/trav.sh > trav.txt
	COUNT=$(gawk '{ sum += $1 }; END { print sum }' ~/Desktop/trav.txt)
	echo $COUNT >> trav.txt
	dialog --stdout --textbox ~/Desktop/trav.txt 22 70
      ;;
6 )
result=$(du -k | awk '{sum += $1}; END {print sum}') #du command will report the size of directory trees, this will be displayed in kilobytes. (-k enables this)
display_result "Display sum of all file sizes (KB)"
;;
  esac
done


traverse file 
#!/bin/bash
# Traverse a directory using depth first traversal technique
# Usage $0 directorypath
# otherwise it takes current working directory as directory path

depth()
{
#a thorough check is done on the tree checking its depth.
k=0
while [ $k -lt $1 ]
do
echo -n " "
let k++
#or use k=`expr $k + 1`
done
}

traverse()
{
# Traverse a directory

ls "$1" | while read i
do
depth $2
if [ -d "$1/$i" ]
then
echo Directory: $1/$i
traverse "$1/$i" `expr $2 + 1`
# Calling this as a subshell means that when the called
# function changes directory, therefore this does not have an effect on the current working directory
# If you call this in current shell it gives the error
# bash: traverse: No such file or directory after changing
# the current directory
else
result=$(du "$1/$i")
echo $result
fi
done
}

# $1 is directory path

if [ -z "$1" ]
then
# Here we are giving '0' is the current depth of direcory
traverse . 0
else
traverse $1 0
fi
